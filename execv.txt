EXECV ASSIGNMENT
ROLL NO - TI56
SAILEE CHOUDHARI

a.c

#include<stdio.h>
#include<sys/types.h>
#include<unistd.h>
#include<stdlib.h>
int binarySearch(int arr[], int l, int r, int x)
{
    if (r >= l) {
        int mid = l + (r - l) / 2;
 
        
        if (arr[mid+1] == x)
            return mid+1;
 
        if (arr[mid+1] > x)
            return binarySearch(arr, l, mid, x);
 
       
        return binarySearch(arr, mid + 2, r, x);
    }
 
    
    return -1;
}
int  main(int argc,char*argv[]){
  
int x[argc-1];
     int status,n;
    int low,high;
    for(int i=1;i<argc;i++)
    {
        x[i]=atoi(argv[i]);
    }
    printf("\n Enter a number do you want to search: ");
    scanf("%d",&n);
    
    
    int result = binarySearch(x, 1, argc-1, n);
    if(result == -1)
    {
        printf("Element is not present in array");
    }
    else
    {
        printf("Element is present at index %d", result);
    }
     }

b.c

#include<stdio.h>
#include<sys/types.h>
#include<unistd.h>
#include<stdlib.h>

int  main(int argc,char*argv[]){
  
 
   pid_t pid,status;
   char*temp;
    
    int x[argc-1];
 
  for(int i=2;i<argc-1;i++)
        {
            for(int j=2;j<argc-i-1;j++)
            {
                if(atoi(argv[j])>atoi(argv[j+1]))
                {
                     temp= argv[j];
                     argv[j] = argv[j+1];
                     argv[j+1] = temp;
                }
            }
        }
      
  for(int i=1;i<argc;i++){
   printf("%s",argv[i]);
     }
       pid=fork(); 
    if(pid==0){
    
    execv(argv[1],argv);
     }
     else{
     
     
     wait(&status);
  
      }
   return 0;
     }
